//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SourceUtils.WebExport.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SourceUtils.WebExport.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var __extends = (this &amp;&amp; this.__extends) || function (d, b) {
        ///    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        ///    function __() { this.constructor = d; }
        ///    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        ///};
        ///var Facepunch;
        ///(function (Facepunch) {
        ///    var Loader = (function () {
        ///        function Loader() {
        ///            this.queue = [];
        ///            this.loaded = {};
        ///            this.active = [];
        ///            this.completed = 0;
        ///        }
        ///        Lo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string facepunch_webgame {
            get {
                return ResourceManager.GetString("facepunch_webgame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///
        ///&lt;html lang=&quot;en&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
        ///    &lt;head&gt;
        ///        &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///        &lt;title&gt;Map Viewer - ${mapName}&lt;/title&gt;
        ///        &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;
        ///        &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/lz-string/1.4.4/lz-string.min.js&quot;&gt;&lt;/script&gt;
        ///        &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/lz-string/1.4.4/base64-string.min.js&quot;&gt;&lt;/script&gt;
        ///        &lt;script src=&quot;${facepunc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string index_template {
            get {
                return ResourceManager.GetString("index_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .map-viewer canvas {
        ///    width: 100%;
        ///    height: 100%;
        ///}
        ///
        ///.map-viewer:-webkit-full-screen {
        ///    top: 0;
        ///    left: 0;
        ///    bottom: 0;
        ///    right: 0;
        ///}
        ///
        ///.map-viewer .side-panel {
        ///    position: relative;
        ///    float: right;
        ///    clear: right;
        ///    z-index: 32;
        ///    width: 256px;
        ///    background-color: rgba(0, 0, 0, 0.25);
        ///    color: white;
        ///    font-family: sans-serif;
        ///    padding: 16px;
        ///    margin: 8px;
        ///}
        ///
        ///.map-viewer .side-panel .slider {
        ///    width: 240px;
        ///    margin: 8px;
        ///}
        ///
        ///.map-viewe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string mapviewer {
            get {
                return ResourceManager.GetString("mapviewer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var __extends = (this &amp;&amp; this.__extends) || function (d, b) {
        ///    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        ///    function __() { this.constructor = d; }
        ///    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        ///};
        ///var SourceUtils;
        ///(function (SourceUtils) {
        ///    var ResourcePage = (function () {
        ///        function ResourcePage(info) {
        ///            this.toLoad = [];
        ///            this.first = info.first;
        ///            this.count = info.count;
        ///            this.ur [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sourceutils {
            get {
                return ResourceManager.GetString("sourceutils", resourceCulture);
            }
        }
    }
}
